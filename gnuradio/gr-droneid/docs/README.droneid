This is the droneid-write-a-block package meant as a guide to building
out-of-tree packages. To use the droneid blocks, the Python namespaces
is in 'droneid', which is imported as:

    import droneid

See the Doxygen documentation for details about the blocks available
in this package. A quick listing of the details can be found in Python
after importing by using:

    help(droneid)

# Notes
This module is currently *very much* an Alpha.  Please don't rely on it for *anything*.  It tends to trail behind the MATLAB/Octave code by weeks!

It currently does some very basic functions:
- Burst detection by using cross correlating for the ZC sequence
- Burst extraction using the correlation scores from the cross correlation above (see note 1)
- Coarse CFO estimation and correction (see note 2) 
- OFDM data carrier extraction

Some things still left to do:
- Channel equalization using the two ZC sequences (https://github.com/proto17/dji_droneid/blob/main/matlab/updated_scripts/process_file.m#L119-L134 and https://github.com/proto17/dji_droneid/blob/main/matlab/updated_scripts/process_file.m#L155-L166)
- Function-izing the Turbo decoder and rate matcher (https://github.com/proto17/dji_droneid/blob/main/cpp/remove_turbo.cc) and using the function(s) to deal with Turbo decoding and rate matching to output full frames
- Parse the frame to spit out something that users can actually use (maybe JSON?)
- Create a more robust timing offset estimator (likely autocorrelating the ZC sequence(s))
- Figure out how to deal with integer frequency offsets (currently just able to detect and correct for fractional offsets)
